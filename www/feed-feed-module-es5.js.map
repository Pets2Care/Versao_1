{"version":3,"sources":["webpack:///src/app/home/feed/feed.page.html","webpack:///src/app/home/feed/feed-routing.module.ts","webpack:///src/app/home/feed/feed.page.scss","webpack:///src/app/home/feed/feed.module.ts","webpack:///src/app/home/feed/feed.page.ts"],"names":["routes","path","component","FeedPageRoutingModule","imports","forChild","exports","FeedPageModule","declarations","FeedPage","petsDataService","userDataService","subject","isLoading","selectedSegment","userData","get","pipe","subscribe","data","petsData","next","complete","fetch","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAJjC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFI,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAJ1B,+DAAS;AACRH,eAAO,EAAE,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,0EAAzC,CADD;AAERI,oBAAY,EAAE,CAAC,mDAAD,EAAW,8FAAX;AAFN,OAAT,CAI0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAE,QAAQ;AAOnB,0BACUC,eADV,EAEUC,eAFV,EAE0C;AAAA;;AADhC,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AARF,eAAAC,OAAA,GAAU,IAAI,4CAAJ,EAAV;AACD,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,eAAA,GAAkB,UAAlB;AAKH;;AAVe;AAAA;AAAA,qCAYX;AAAA;;AACN,iBAAKC,QAAL,GAAgB,KAAKJ,eAAL,CAAqBK,GAArB,EAAhB;AACA,iBAAKN,eAAL,CACGM,GADH,GAEGC,IAFH,CAEQ,iEAAU,KAAKL,OAAf,CAFR,EAGGM,SAHH,CAGa,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACC,QAAL,GAAgBD,IAAhB;AACD,aALH;AAMD;AApBkB;AAAA;AAAA,wCAsBR;AACT,iBAAKP,OAAL,CAAaS,IAAb;AACA,iBAAKT,OAAL,CAAaU,QAAb;AACD,WAzBkB,CA2BnB;;AA3BmB;AAAA;AAAA,6CA4BH;AAAA;;AACd,iBAAKT,SAAL,GAAiB,IAAjB;AACA,iBAAKH,eAAL,CAAqBa,KAArB,GAA6BL,SAA7B,CAAuC,YAAM;AAC3C,oBAAI,CAACL,SAAL,GAAiB,KAAjB;AACD,aAFD;AAGD;AAjCkB;;AAAA;AAAA,S;;;;gBARZ;;gBACA;;;;AAOIJ,cAAQ,6DALpB,gEAAU;AACTe,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR,kEAFS;;AAAA,OAAV,CAKoB,GAARhB,QAAQ,CAAR","file":"feed-feed-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-segment [(ngModel)]=\\\"selectedSegment\\\">\\r\\n      <ion-segment-button value=\\\"featured\\\">\\r\\n        <ion-label>Destaques</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"custom\\\">\\r\\n        <ion-label>Personalizado</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<div [ngSwitch]=\\\"selectedSegment\\\" >\\r\\n  <ion-grid *ngSwitchCase=\\\"'featured'\\\">\\r\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\">\\r\\n      <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isLoading && petsData.length <= 0\\\">\\r\\n      <p>Nenhum Anúncio Encontrado!</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isLoading && petsData.length > 0\\\">\\r\\n      <app-photo-card [item]=\\\"i\\\" *ngFor=\\\"let i of petsData\\\"> </app-photo-card>\\r\\n    </div>   \\r\\n  </ion-grid>\\r\\n  <ion-grid *ngSwitchCase=\\\"'custom'\\\">\\r\\n    <ion-item>\\r\\n      conteúdo custom do usuário {{userData.name}}\\r\\n    </ion-item>\\r\\n  </ion-grid>\\r\\n</div>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport type { Routes } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FeedPage } from './feed.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FeedPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FeedPageRoutingModule {}\r\n","export default \".main-logo {\\n  width: 4em;\\n  margin-top: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9mZWVkL2ZlZWQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9ob21lL2ZlZWQvZmVlZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1sb2dvIHtcclxuICAgIHdpZHRoOiA0ZW07XHJcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xyXG59Il19 */\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PhotoCardComponent } from '../../components/photo-card/photo-card.component';\r\n\r\nimport { FeedPageRoutingModule } from './feed-routing.module';\r\nimport { FeedPage } from './feed.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, FeedPageRoutingModule],\r\n  declarations: [FeedPage, PhotoCardComponent],\r\n})\r\nexport class FeedPageModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Pet } from '../../interfaces/Pet';\r\nimport { User } from '../../interfaces/User';\r\nimport { PetsDataServiceNew } from '../../services/PetsDataServiceNew';\r\nimport { UserDataService } from '../../services/UserDataService';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.page.html',\r\n  styleUrls: ['./feed.page.scss'],\r\n})\r\nexport class FeedPage implements OnInit, OnDestroy {\r\n  private subject = new Subject();\r\n  public isLoading = false;\r\n  public petsData: Readonly<Pet[]>;\r\n  public userData: User;\r\n  public selectedSegment = 'featured';\r\n\r\n  constructor(\r\n    private petsDataService: PetsDataServiceNew,\r\n    private userDataService: UserDataService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userData = this.userDataService.get();\r\n    this.petsDataService\r\n      .get()\r\n      .pipe(takeUntil(this.subject))\r\n      .subscribe(data => {\r\n        this.petsData = data;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subject.next();\r\n    this.subject.complete();\r\n  }\r\n\r\n  //Preciso desse? Ele acaba dando um novo fetch toda vez que entra nessa tela\r\n  ionViewWillEnter(): void {\r\n    this.isLoading = true;\r\n    this.petsDataService.fetch().subscribe(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n"]}