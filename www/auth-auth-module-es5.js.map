{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.page.html","webpack:///src/app/users.js","webpack:///src/app/services/UserDataService.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.page.scss","webpack:///src/app/auth/auth.page.ts","webpack:///src/app/services/UsersDataService.ts"],"names":["routes","path","component","users","id","name","email","password","UserDataService","storage","loadData","console","log","get","storageData","data","set","newData","storeData","remove","providedIn","AuthPageModule","imports","declarations","AuthPage","usersDataService","userDataService","alertController","router","getAll","ev","hasUser","find","e","userName","loginUser","presentAlertError","create","header","message","buttons","alert","present","userId","user","getById","navigate","selector","template","UsersDataService","push","i","entry","findIndex","currentId","Math","max","map","splice"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthPage } from './auth.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthPage,\r\n  },\r  {\n    path: 'new-user',\n    loadChildren: () => import('./new-user/new-user.module').then( m => m.NewUserPageModule)\n  },\n\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthPageRoutingModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-item>\\r\\n    <ion-label>E-mail</ion-label>\\r\\n    <ion-input clearInput type=\\\"email\\\" [(ngModel)]=\\\"userName\\\"></ion-input>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label>Senha</ion-label>\\r\\n    <ion-input clearInput type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <br>\\r\\n\\r\\n  <div style=\\\"text-align: center\\\">\\r\\n    <ion-button (click)=\\\"verifyUser($event)\\\" >Login</ion-button>\\r\\n  </div>\\r\\n  <br>\\r\\n\\r\\n  <br>\\r\\n  <div style=\\\"text-align: center\\\">\\r\\n    <ion-button fill=\\\"clear\\\" (click)=\\\"createUser()\\\">\\r\\n      <span>\\r\\n        <ion-icon name=\\\"man-outline\\\"></ion-icon><br>\\r\\n      <small> Ainda não tem uma conta? Registre-se Aqui!</small> \\r\\n      </span> \\r\\n    </ion-button>\\r\\n  </div>\\r\\n</ion-content>\";","const users = [\r\n  {\r\n    id: 0,\r\n    name: 'José Assis',\r\n    email: 'jose.assis@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Maria do Carmo',\r\n    email: 'maria.carmo@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Pedro Oliveira',\r\n    email: 'pedro.oliveira@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Lucas Costa',\r\n    email: 'lucas.costa@email.com',\r\n    password: '1234',\r\n  },\r\n];\r\n\r\nexport default users;\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { User } from '../interfaces/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserDataService {\r\n  private data: User;\r\n\r\n  constructor(private storage: Storage) {\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData() {\r\n    console.log('UserDataService -> loadData()');\r\n    const storageData = (await this.storage.get('user')) as User;\r\n    if (storageData) {\r\n      this.data = storageData;\r\n    }\r\n  }\r\n\r\n  private storeData() {\r\n    this.storage.set('user', this.data);\r\n  }\r\n\r\n  public get(): User {\r\n    return this.data;\r\n  }\r\n\r\n  public set(newData: User): void {\r\n    this.data = newData;\r\n    this.storeData();\r\n  }\r\n\r\n  public clear(): void {\r\n    console.log('UserDataService -> clear()');\r\n    this.storage.remove('user');\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AuthPageRoutingModule } from './auth-routing.module';\r\nimport { AuthPage } from './auth.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, AuthPageRoutingModule],\r\n  declarations: [AuthPage],\r\n})\r\nexport class AuthPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\nimport { User } from '../interfaces/User';\r\nimport { UserDataService } from '../services/UserDataService';\r\nimport { UsersDataService } from '../services/UsersDataService';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.page.html',\r\n  styleUrls: ['./auth.page.scss'],\r\n})\r\nexport class AuthPage implements OnInit {\r\n  users: Readonly<User[]>;\r\n  userName: '';\r\n  password: any;\r\n\r\n  constructor(\r\n    private usersDataService: UsersDataService,\r\n    private userDataService: UserDataService,\r\n    private alertController: AlertController,\r\n    private router: Router,\r\n  ) {\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  loadData() {\r\n    this.users = this.usersDataService.getAll();\r\n  }\r\n\r\n  verifyUser(ev: any){\r\n    const hasUser = this.users.find(e => e.email === this.userName);\r\n    if (hasUser){\r\n      if (hasUser.password === this.password){\r\n        this.loginUser(hasUser.id);\r\n      }\r\n    }\r\n    else{\r\n      this.presentAlertError();\r\n    }\r\n  }\r\n\r\n  async presentAlertError() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Atenção!',\r\n      message: 'Usuário e/ou Senha incorretos!',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  loginUser(userId: number): void {\r\n    const user = this.usersDataService.getById(userId);\r\n    this.userDataService.set(user);\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  createUser(): void{\r\n    this.router.navigate(['/auth/new-user']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { User } from '../interfaces/User';\r\nimport users from '../users.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersDataService {\r\n  private data: User[] = [];\r\n\r\n  constructor(private storage: Storage) {\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData() {\r\n    const storageData = (await this.storage.get('users')) as User[];\r\n    if (storageData) {\r\n      this.data.push(...storageData);\r\n    } else {\r\n      this.data.push(...users);\r\n    }\r\n  }\r\n\r\n  private storeData() {\r\n    this.storage.set('users', this.data);\r\n  }\r\n\r\n  public getAll(): Readonly<Readonly<User>[]> {\r\n    return this.data;\r\n  }\r\n\r\n  public getById(id: number): User {\r\n    return { ...this.data.find(i => i.id === id) };\r\n  }\r\n\r\n  public update(entry: User): number {\r\n    console.log('UsersDataService -> update, entry = ', entry);\r\n    const id = this.data.findIndex(i => i.id === entry.id);\r\n    if (id >= 0) {\r\n      this.data[id] = entry;\r\n      this.storeData();\r\n      console.log('UsersDataService -> update, was updated');\r\n    }\r\n    return id;\r\n  }\r\n\r\n  public create(entry: User): number {\r\n    const currentId = Math.max(...this.data.map(i => i.id)) + 1;\r\n    this.data.push({ ...entry, id: currentId });\r\n    this.storeData();\r\n    return currentId;\r\n  }\r\n\r\n  public delete(entry: User): number {\r\n    const id = this.data.findIndex(i => i.id === entry.id);\r\n    if (id >= 0) {\r\n      this.data.splice(id, 1);\r\n      this.storeData();\r\n    }\r\n    return id;\r\n  }\r\n}\r\n"]}