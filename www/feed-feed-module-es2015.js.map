{"version":3,"sources":["./src/app/home/feed/feed.page.html","./src/app/home/feed/feed-routing.module.ts","./src/app/home/feed/feed.page.scss","./src/app/home/feed/feed.module.ts","./src/app/home/feed/feed.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4jCAA6/B,eAAe,iEAAiE,E;;;;;;;;;;;;;;;;;;;ACAnjC;AAEM;AAER;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;ACjBlC;AAAe,4EAAa,eAAe,qBAAqB,GAAG,6CAA6C,2UAA2U,E;;;;;;;;;;;;;;;;;;;;;;;ACA5Y;AACN;AACI;AACA;AAEyC;AAExB;AACvB;IAM1B,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAJ1B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,0EAAqB,CAAC;QACxE,YAAY,EAAE,CAAC,mDAAQ,EAAE,8FAAkB,CAAC;KAC7C,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACdkC;AAC9B;AACY;AAI4B;AACN;IAOpD,QAAQ,SAAR,QAAQ;IAOnB,YACU,eAAmC,EACnC,eAAgC;QADhC,oBAAe,GAAf,eAAe,CAAoB;QACnC,oBAAe,GAAf,eAAe,CAAiB;QARlC,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QACzB,cAAS,GAAG,KAAK,CAAC;QAGlB,oBAAe,GAAG,UAAU,CAAC;IAKjC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe;aACjB,GAAG,EAAE;aACL,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IAED,4EAA4E;IAC5E,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA1CQ,+EAAkB;YAClB,yEAAe;;AAOX,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,4EAA+B;;KAEhC,CAAC;GACW,QAAQ,CAkCpB;AAlCoB","file":"feed-feed-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-segment [(ngModel)]=\\\"selectedSegment\\\">\\r\\n      <ion-segment-button value=\\\"featured\\\">\\r\\n        <ion-label>Destaques</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"custom\\\">\\r\\n        <ion-label>Personalizado</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<div [ngSwitch]=\\\"selectedSegment\\\" >\\r\\n  <ion-grid *ngSwitchCase=\\\"'featured'\\\">\\r\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"ion-text-center\\\">\\r\\n      <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isLoading && petsData.length <= 0\\\">\\r\\n      <p>Nenhum Anúncio Encontrado!</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isLoading && petsData.length > 0\\\">\\r\\n      <app-photo-card [item]=\\\"i\\\" *ngFor=\\\"let i of petsData\\\"> </app-photo-card>\\r\\n    </div>   \\r\\n  </ion-grid>\\r\\n  <ion-grid *ngSwitchCase=\\\"'custom'\\\">\\r\\n    <ion-item>\\r\\n      conteúdo custom do usuário {{userData.name}}\\r\\n    </ion-item>\\r\\n  </ion-grid>\\r\\n</div>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport type { Routes } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FeedPage } from './feed.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FeedPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FeedPageRoutingModule {}\r\n","export default \".main-logo {\\n  width: 4em;\\n  margin-top: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9mZWVkL2ZlZWQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9ob21lL2ZlZWQvZmVlZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1sb2dvIHtcclxuICAgIHdpZHRoOiA0ZW07XHJcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xyXG59Il19 */\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PhotoCardComponent } from '../../components/photo-card/photo-card.component';\r\n\r\nimport { FeedPageRoutingModule } from './feed-routing.module';\r\nimport { FeedPage } from './feed.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, FeedPageRoutingModule],\r\n  declarations: [FeedPage, PhotoCardComponent],\r\n})\r\nexport class FeedPageModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Pet } from '../../interfaces/Pet';\r\nimport { User } from '../../interfaces/User';\r\nimport { PetsDataServiceNew } from '../../services/PetsDataServiceNew';\r\nimport { UserDataService } from '../../services/UserDataService';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.page.html',\r\n  styleUrls: ['./feed.page.scss'],\r\n})\r\nexport class FeedPage implements OnInit, OnDestroy {\r\n  private subject = new Subject();\r\n  public isLoading = false;\r\n  public petsData: Readonly<Pet[]>;\r\n  public userData: User;\r\n  public selectedSegment = 'featured';\r\n\r\n  constructor(\r\n    private petsDataService: PetsDataServiceNew,\r\n    private userDataService: UserDataService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userData = this.userDataService.get();\r\n    this.petsDataService\r\n      .get()\r\n      .pipe(takeUntil(this.subject))\r\n      .subscribe(data => {\r\n        this.petsData = data;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subject.next();\r\n    this.subject.complete();\r\n  }\r\n\r\n  //Preciso desse? Ele acaba dando um novo fetch toda vez que entra nessa tela\r\n  ionViewWillEnter(): void {\r\n    this.isLoading = true;\r\n    this.petsDataService.fetch().subscribe(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}