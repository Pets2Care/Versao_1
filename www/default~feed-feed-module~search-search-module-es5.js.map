{"version":3,"sources":["webpack:///src/app/services/PetsDataServiceNew.ts","webpack:///src/app/users.js","webpack:///src/app/components/photo-card/photo-card.component.scss","webpack:///src/app/components/photo-card/photo-card.component.ts","webpack:///src/app/services/UserDataService.ts","webpack:///src/app/services/UsersDataService.ts","webpack:///src/app/components/photo-card/photo-card.component.html"],"names":["PetsDataServiceNew","http","dataStream","asObservable","get","API_URL","pipe","response","next","id","data","formData","FormData","append","name","place","userName","userId","toString","age","type","description","images","image","console","log","formatFormData","post","fetch","subscribe","put","providedIn","users","email","password","PhotoCardComponent","usersDataService","alertController","userDataService","contact","create","header","message","buttons","alert","present","donationUserId","currentUser","donationUser","getById","presentAlertDonation","presentAlertDetails","Date","item","createdAt","toLocaleDateString","selector","template","UserDataService","storage","loadData","storageData","set","newData","storeData","remove","UsersDataService","push","find","i","entry","findIndex","currentId","Math","max","map","splice"],"mappings":"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","file":"default~feed-feed-module~search-search-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { take, map, tap, switchMap, filter } from 'rxjs/operators';\r\nimport { format } from 'util';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { Pet } from '../interfaces/Pet';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PetsDataServiceNew {\r\n  private dataStream = new BehaviorSubject<Pet[]>([]);\r\n\r\n  public get(): Observable<Pet[]> {\r\n    return this.dataStream.asObservable();\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public fetch(): Observable<any> {\r\n    return this.http.get<any>(`${environment.API_URL}/pets`).pipe(\r\n      tap(response => {\r\n        this.dataStream.next(response);\r\n      }),\r\n    );\r\n  }\r\n\r\n  public getById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${environment.API_URL}/pets/${id}`).pipe(\r\n      tap(response => {\r\n        this.dataStream.next(response);\r\n      }),\r\n    );\r\n  }\r\n\r\n  private formatFormData(data: any): FormData {\r\n    const formData = new FormData();\r\n    formData.append('name', data.name);\r\n    formData.append('place', data.place);\r\n    formData.append('userName', data.userName);\r\n    formData.append('userId', data.userId.toString());\r\n    formData.append('age', data.age.toString());\r\n    formData.append('type', data.type);\r\n    formData.append('description', data.description);\r\n\r\n    for (const image of data.images) {\r\n      formData.append('images', image);\r\n    }\r\n\r\n    return formData;\r\n  }\r\n\r\n  public create(data: any): Observable<any> {\r\n    console.log('petDataService -> create -> data = ', data);\r\n    const formData = this.formatFormData(data);\r\n\r\n    return this.http.post<any>(`${environment.API_URL}/pets`, formData).pipe(\r\n      tap(response => {\r\n        console.log('create response = ', response);\r\n        this.fetch().subscribe();\r\n      }),\r\n    );\r\n  }\r\n\r\n  public update(data: any): Observable<any> {\r\n    console.log('petDataService -> update -> data = ', data);\r\n    const formData = this.formatFormData(data);\r\n\r\n    return this.http\r\n      .put<any>(`${environment.API_URL}/pets/${data.id}`, formData)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log('update response = ', response);\r\n          this.fetch().subscribe();\r\n        }),\r\n      );\r\n  }\r\n\r\n  public delete(id: number): Observable<any> {\r\n    console.log('PetsDataServiceNew -> delete() -> chamou -> id = ', id);\r\n    return this.http.delete<any>(`${environment.API_URL}/pets/${id}`).pipe(\r\n      tap(response => {\r\n        console.log('delete response = ', response);\r\n        this.fetch().subscribe();\r\n      }),\r\n    );\r\n  }\r\n}\r\n","const users = [\r\n  {\r\n    id: 0,\r\n    name: 'José Assis',\r\n    email: 'jose.assis@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Maria do Carmo',\r\n    email: 'maria.carmo@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Pedro Oliveira',\r\n    email: 'pedro.oliveira@email.com',\r\n    password: '1234',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Lucas Costa',\r\n    email: 'lucas.costa@email.com',\r\n    password: '1234',\r\n  },\r\n];\r\n\r\nexport default users;\r\n","export default \".cardImg {\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n  width: 100%;\\n  height: 250px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9waG90by1jYXJkL3Bob3RvLWNhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBQTtLQUFBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvdG8tY2FyZC9waG90by1jYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmRJbWcge1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxufSJdfQ== */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\nimport { UserDataService } from '../../services/UserDataService';\r\nimport { UsersDataService } from '../../services/UsersDataService';\r\n@Component({\r\n  selector: 'app-photo-card',\r\n  templateUrl: './photo-card.component.html',\r\n  styleUrls: ['./photo-card.component.scss'],\r\n})\r\nexport class PhotoCardComponent implements OnInit {\r\n  @Input() public item;\r\n\r\n  constructor(\r\n    private usersDataService: UsersDataService,\r\n    private alertController: AlertController,\r\n    private userDataService: UserDataService,\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async presentAlertDonation(contact: string): Promise<any> {\r\n    const alert = await this.alertController.create({\r\n      header: 'Oba!',\r\n      message:\r\n        'Para combinar os detalhes da adoção com o tutor temporário, entre em contato através do e-mail: <strong>' +\r\n        contact +\r\n        '</strong>',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async presentAlertDetails(): Promise<any> {\r\n    const alert = await this.alertController.create({\r\n      header: 'Atenção!',\r\n      message: 'Você disponibilizou esse animal para adoção.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  selectAnimal(donationUserId: number): void {\r\n    const currentUser = this.userDataService.get();\r\n    const donationUser = this.usersDataService.getById(donationUserId);\r\n\r\n    if (currentUser.id !== donationUser.id) {\r\n      this.presentAlertDonation(donationUser.email);\r\n    } else {\r\n      this.presentAlertDetails();\r\n    }\r\n  }\r\n\r\n  public getFormattedDate(): string {\r\n    return new Date(this.item.createdAt).toLocaleDateString('pt-BR');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { User } from '../interfaces/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserDataService {\r\n  private data: User;\r\n\r\n  constructor(private storage: Storage) {\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData() {\r\n    console.log('UserDataService -> loadData()');\r\n    const storageData = (await this.storage.get('user')) as User;\r\n    if (storageData) {\r\n      this.data = storageData;\r\n    }\r\n  }\r\n\r\n  private storeData() {\r\n    this.storage.set('user', this.data);\r\n  }\r\n\r\n  public get(): User {\r\n    return this.data;\r\n  }\r\n\r\n  public set(newData: User): void {\r\n    this.data = newData;\r\n    this.storeData();\r\n  }\r\n\r\n  public clear(): void {\r\n    console.log('UserDataService -> clear()');\r\n    this.storage.remove('user');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { User } from '../interfaces/User';\r\nimport users from '../users.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersDataService {\r\n  private data: User[] = [];\r\n\r\n  constructor(private storage: Storage) {\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData() {\r\n    const storageData = (await this.storage.get('users')) as User[];\r\n    if (storageData) {\r\n      this.data.push(...storageData);\r\n    } else {\r\n      this.data.push(...users);\r\n    }\r\n  }\r\n\r\n  private storeData() {\r\n    this.storage.set('users', this.data);\r\n  }\r\n\r\n  public getAll(): Readonly<Readonly<User>[]> {\r\n    return this.data;\r\n  }\r\n\r\n  public getById(id: number): User {\r\n    return { ...this.data.find(i => i.id === id) };\r\n  }\r\n\r\n  public update(entry: User): number {\r\n    console.log('UsersDataService -> update, entry = ', entry);\r\n    const id = this.data.findIndex(i => i.id === entry.id);\r\n    if (id >= 0) {\r\n      this.data[id] = entry;\r\n      this.storeData();\r\n      console.log('UsersDataService -> update, was updated');\r\n    }\r\n    return id;\r\n  }\r\n\r\n  public create(entry: User): number {\r\n    const currentId = Math.max(...this.data.map(i => i.id)) + 1;\r\n    this.data.push({ ...entry, id: currentId });\r\n    this.storeData();\r\n    return currentId;\r\n  }\r\n\r\n  public delete(entry: User): number {\r\n    const id = this.data.findIndex(i => i.id === entry.id);\r\n    if (id >= 0) {\r\n      this.data.splice(id, 1);\r\n      this.storeData();\r\n    }\r\n    return id;\r\n  }\r\n}\r\n","export default \"<ion-card>\\r\\n  <ion-card-header>\\r\\n    <ion-card-title><strong>{{item.name}} - {{item.age}} {{item.age > 1 ? 'Meses' : 'Mês'}} </strong></ion-card-title>\\r\\n    <ion-card-subtitle>{{item.place}}</ion-card-subtitle>\\r\\n    <ion-card-subtitle>Criado em: {{getFormattedDate()}}</ion-card-subtitle>\\r\\n    <ion-card-subtitle>Tutor temporário: {{item.userName}}</ion-card-subtitle>\\r\\n  </ion-card-header>\\r\\n<ion-card-content>\\r\\n  <ion-img class=\\\"cardImg\\\" [src]=\\\"item && item.images[0] && item.images[0].url\\\" alt={{item.name}}></ion-img>\\r\\n  <ion-item lines=\\\"full\\\">\\r\\n    <ion-label class=\\\"ion-text-wrap\\\">{{item.description}}</ion-label>\\r\\n  </ion-item>  \\r\\n</ion-card-content>\\r\\n  \\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"selectAnimal(item.userId)\\\">\\r\\n        <span>\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"paw-outline\\\"></ion-icon>\\r\\n          <small> Cuidar </small>\\r\\n        </span>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-card>\";"]}